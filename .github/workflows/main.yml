name: main

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt

  build_and_push_to_docker_hub_backend:
    name: Push Docker image Backend to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub Backend
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest
          context: backend/
  build_and_push_to_docker_hub_frontend:
    name: Push Docker image Frontend to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub Frontend
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest
          context: frontend/
  
  deploy:
    runs-on: ubuntu-latest
    needs:
    - build_and_push_to_docker_hub_backend
    - build_and_push_to_docker_hub_frontend
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        docker_username: ${{ secrets.DOCKER_USERNAME }}
        script: |     
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend
            sudo docker compose stop
            sudo docker compose rm foodgram-backend
            sudo docker compose rm foodgram-frontend   
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY="${{ secrets.SECRET_KEY }}" >> .env 
            sudo docker compose up -d --build
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
